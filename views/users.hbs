<div class="row">
  <div class="col-12">
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-10">
            <h4 class="card-title">Liste des utilisateurs du système</h4>
            {{#if populated}}
              <p class="card-title-desc">Visualisez la liste des utilisateurs du système, n'hésitez pas à
                cliquer sur les colonnes pour les organiser.</p>
            {{else}}
              <p class="card-title-desc">Aucun utilisateur disponible. Cliquez sur le bouton "Ajouter"
                pour
                créer un utilisateur.</p>
            {{/if}}
          </div>
          <div class="col-md-2">
            <button class="btn btn-primary float-right" data-toggle="modal" data-target=".add-user-modal"><i
                class="bx bx-user-plus mr-2"></i>Ajouter</button>
          </div>
        </div>

        {{> messages}}

        {{#if populated}}
          <table id="datatable-buttons" class="table table-striped table-bordered dt-responsive nowrap"
            style="border-collapse: collapse; border-spacing: 0; width: 100%;">
            <thead>
              <tr>
                <th>#</th>
                <th>Noms & Prénoms</th>
                <th>Type</th>
                <th>Sexe</th>
                <th>Téléphone</th>
                <th>Statut</th>
                <th>Actions</th>
              </tr>
            </thead>

            <tbody>
              {{#each all as |user|}}
                <tr>
                  <td style="font-weight: bold">{{inc @index}}</td>
                  <td style="font-weight: bold">{{user.Staff.first_name}} {{user.Staff.last_name}}
                  </td>
                  <td>{{user.Staff.type}}</td>
                  <td>{{user.Staff.gender}}</td>
                  <td>{{user.Staff.phone}}</td>
                  <td>
                    {{#if user.active}}
                      <span class="badge badge-primary">Activé</span>
                    {{else}}
                      <span class="badge badge-danger">Désactivé</span>
                    {{/if}}
                  </td>
                  <td>
                    <div class="btn-group mt-4 mt-md-0" role="group" aria-label="Staff actions">
                      <button type="button" title="Activer/Désactiver le compte" class="btn btn-primary toggle"
                        data-user="{{user.id}}" data-active="{{user.active}}"><i
                          class="bx bx-lock-open-alt"></i></button>
                      <button type="button" title="Supprimer" class="btn btn-danger delete" data-user="{{user.id}}"><i
                          class="bx bx-trash"></i></a>
                    </div>
                  </td>
                </tr>
              {{/each}}
            </tbody>
          </table>
        {{/if}}
      </div>
    </div>
  </div>
</div>

<!-- Add user modal -->
<div class="modal fade add-user-modal" tabindex="-1" role="dialog" aria-labelledby="Add user modal"
  style="display: none;" aria-modal="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <div class="col-md-10">
          <h5 class="modal-title mt-0" id="myLargeModalLabel">Créer un compte utilisateur</h5>
          <p class="card-title-desc" style="margin-bottom: 0">Choisissez le personel pour qui vous voulez
            créer un compte et spécifiez son mot de passe.</p>
        </div>

        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <form action="/api/users" method="post">
        <div class="modal-body">
          <div class="row">
            <div class="col-md-12">
              <div class="form-group">
                <label for="staff">Personnel *</label>
                <select name="staff" id="staff" class="form-control" required>
                  <option value="">Sélectionnez le propriétaire du compte</option>
                  {{#each staff as |single|}}
                    <option value="{{single.id}}">{{single.first_name}} {{single.last_name}}
                    </option>
                  {{/each}}
                </select>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-12">
              <div class="form-group">
                <label for="password">Mot de passe</label>
                <div class="row">
                  <div class="col-md-7">
                    <input type="password" class="form-control" name="password" id="password"
                      placeholder="Entrez le mot de passe de l'utilisateur" required>
                  </div>
                  <div class="col-md-5">
                    <button type="button" class="btn btn-primary show-pwd">
                      <i class="bx bx-show"></i>
                    </button>
                    <button type="button" class="btn btn-primary pwd-gen"><i class="bx bx-lock-alt mr-2"></i>Générer un
                      mot de
                      passe</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="cancel" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
          <button type="submit" class="btn btn-success">Enregistrer</button>
        </div>
      </form>
    </div>
    <!-- /.modal-content -->
  </div>
  <!-- /.modal-dialog -->
</div>
<!-- End add user modal -->

<!-- Required datatable js -->
<script src="/assets/libs/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="/assets/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>
<!-- Buttons examples -->
<script src="/assets/libs/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
<script src="/assets/libs/datatables.net-buttons-bs4/js/buttons.bootstrap4.min.js"></script>
<script src="/assets/libs/jszip/jszip.min.js"></script>
<script src="/assets/libs/pdfmake/build/pdfmake.min.js"></script>
<script src="/assets/libs/pdfmake/build/vfs_fonts.js"></script>
<script src="/assets/libs/datatables.net-buttons/js/buttons.html5.min.js"></script>
<script src="/assets/libs/datatables.net-buttons/js/buttons.print.min.js"></script>
<!-- Responsive examples -->
<script src="/assets/libs/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
<script src="/assets/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"></script>
<script src="/assets/libs/sweetalert2/sweetalert2.min.js"></script>


<script>
  let pwd_visible = false;

  const disableInput = () => {
    const input = $('#edit-staff-form').find('input');
    const select = $('#edit-staff-form').find('select');

    for (item of input) {
      item.disabled = true;
    }

    for (item of select) {
      item.disabled = true;
    }
  };

  const enableInput = () => {
    const input = $('#edit-staff-form').find('input');
    const select = $('#edit-staff-form').find('select');

    for (item of input) {
      item.disabled = false;
    }

    for (item of select) {
      item.disabled = false;
    }
  };

  const generate = (length) => {
    var result = '';
    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    var charactersLength = characters.length;
    for (var i = 0; i < length; i++) {
      result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }
    return result;
  }

  $('.pwd-gen').click(() => {
    $('#password').val(generate(10));
  });

  $('.show-pwd').click(() => {
    if (!pwd_visible)
      $('#password')[0].type = 'text';
    else
      $('#password')[0].type = 'password';

    pwd_visible = !pwd_visible;
  });

  // Init DataTable
  $('table').DataTable({ lengthChange: !1, buttons: ["copy", "excel", "pdf"] }).buttons().container().appendTo("#datatable-buttons_wrapper .col-md-6:eq(0)");

  $('.toggle').click(function () {
    const that = $(this);
    const user_id = that[0].dataset['user'];
    const parent = that.parent().parent().parent();
    const badge = parent.find('span.badge');
    const active = that[0].dataset['active'] === "true";

    $.ajax({
      method: 'POST',
      url: '/api/users/' + user_id + '/toggle',
      data: { active: !active },
      success: (state) => {
        console.log(state);
        that[0].dataset['active'] = state.toString();

        if (!active == true) {
          badge.removeClass('badge-danger').addClass('badge-primary').text('Activé');
        } else {
          badge.removeClass('badge-primary').addClass('badge-danger').text('Désactivé');
        }
      },
      error: (err) => {
        console.error(err);
      }
    });
  });

  $('.edit').click(function () {
    const staff_id = $(this)[0].dataset['staff'];

    $.ajax({
      method: 'GET',
      url: '/api/staff/' + staff_id,
      success: (staff) => {
        $('.edit-staff-modal #first_name').val(staff.first_name);
        $('.edit-staff-modal #last_name').val(staff.last_name);
        $('.edit-staff-modal #birthdate').val(moment(staff.birthdate).format('YYYY-MM-DD'));
        $('.edit-staff-modal #birthplace').val(staff.birthplace);
        $('.edit-staff-modal #address').val(staff.address);
        $('.edit-staff-modal #phone').val(staff.phone);
        $('.edit-staff-modal #email').val(staff.email);

        $('.edit-staff-modal #gender').find('option[value="' + staff.gender + '"]')[0].selected = true
        $('.edit-staff-modal #type').find('option[value="' + staff.type + '"]')[0].selected = true

        $('#edit-staff-form')[0].action = '/api/staff/' + staff._id + '/update';
        enableInput();

        $('.edit-staff-modal').modal('show');
      },
      error: (err) => {
        console.error(err);
      }
    });
  });

  $('.show').click(function () {
    const staff_id = $(this)[0].dataset['staff'];

    $.ajax({
      method: 'GET',
      url: '/api/staff/' + staff_id,
      success: (staff) => {
        $('.edit-staff-modal #first_name').val(staff.first_name);
        $('.edit-staff-modal #last_name').val(staff.last_name);
        $('.edit-staff-modal #birthdate').val(moment(staff.birthdate).format('YYYY-MM-DD'));
        $('.edit-staff-modal #birthplace').val(staff.birthplace);
        $('.edit-staff-modal #address').val(staff.address);
        $('.edit-staff-modal #phone').val(staff.phone);
        $('.edit-staff-modal #email').val(staff.email);

        $('.edit-staff-modal #gender').find('option[value="' + staff.gender + '"]')[0].selected = true
        $('.edit-staff-modal #type').find('option[value="' + staff.type + '"]')[0].selected = true

        disableInput();

        $('.edit-staff-modal').modal('show');
      },
      error: (err) => {
        console.error(err);
      }
    });
  });

  $('.delete').click(function () {
    const user_id = $(this)[0].dataset['user'];

    Swal.fire({
      title: 'Confirmation de suppression',
      text: "Êtes vous sûr de vouloir supprimer cet utilisateur?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#45cb85',
      cancelButtonColor: '#9095ad',
      confirmButtonText: 'Oui, supprimer',
      cancelButtonText: 'Annuler'
    }).then((result) => {
      if (result.value) {
        $.ajax({
          url: '/api/users/' + user_id + '/delete',
          method: 'GET',
          success: (res) => {
            Swal.fire('Suppression effectuée', res.message, 'success');
            setTimeout(() => {
              window.location.reload();
            }, 2000);
          },
          error: (err) => {
            console.error(err);
            Swal.fire('Erreur de suppression', err.responseJSON.message, 'error');
          }
        });
      }
    });
  });
</script>